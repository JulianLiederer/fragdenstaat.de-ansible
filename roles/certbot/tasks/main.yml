---

- name: Add certboot apt repo
  apt_repository: repo="ppa:certbot/certbot" update_cache=false

- name: Ensure software-properties-common installed
  apt: name=software-properties-common state=latest
  register: certbot_repo_added

- apt: update_cache=true
  when: certbot_repo_added is changed

- name: Install Certbot.
  apt: name=certbot state=latest

- name: Install Certbot nginx
  apt: name=python-certbot-nginx state=latest

- name: Check if Nginx exists
  stat: path=/etc/init.d/nginx
  register: nginx_status

- name: Make letsencrypt tmp dir
  file: path=/opt/letsencrypt/tmp state=directory

- name: Generate cert for HTTPS domains
  command: "{{ certbot_script }} certonly --webroot --agree-tos --email {{ letsencrypt_registrion_email }} -d {{ item }} -d www.{{ item }}"
  args:
    creates: "{{ certbot_output_dir }}{{ item }}"
  with_items: "{{ https_domains }}"

- name: Generate cert for mail domain
  command: "{{ certbot_script }} certonly --webroot --agree-tos --email {{ letsencrypt_registrion_email }} -d {{ mail_domain }} -d {{ domain_name }} ; service nginx restart; service postfix restart; service dovecot restart"
  args:
    creates: "{{ certbot_output_dir }}{{ mail_domain }}"

- name: Ensure a cron job to auto-renew the cert exists
  cron: name="daily auto renew cert"
        special_time=daily
        job="{{ certbot_script }} renew --deploy-hook 'service nginx reload'"
        state=present
  when: certbot_auto_renew
